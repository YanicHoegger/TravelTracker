@using TravelTracker.Views
@using TravelTracker.User
@model UserDetailsViewModel


@{
    ViewData["Title"] = Model.NewUserName.NewUserName;
}

@section Stylesheets{
    <link rel="stylesheet" href="~/css/userDetails.css" />
}

<h2>User Details</h2>

<div class="panel-group" id="accordion">
  <div class="panel panel-default">
    <userdetails name="Username" value="@Model.NewUserName.NewUserName" content-href="#collapse1"></userdetails>
    <div id="collapse1" class="panel-collapse collapse @(ViewData.ModelState.IsFieldInvalid("NewUserName.NewUserName") ? "in" : "")">
      <div class="panel-body">
		<form method="POST" asp-controller="User" asp-action="ChangeUserName">
            <div class="form-group">
                <label>New Username</label>
                <input asp-for="NewUserName.NewUserName" value="@Model.NewUserName.NewUserName" class="form-control"/>
				<span asp-validation-for="NewUserName.NewUserName" class="text-danger"></span>
            </div>
            <input type="submit" value="Save" class="btn btn-primary"/>
        </form>
	  </div>
    </div>
  </div>
  <div class="panel panel-default">
    <userdetails name="Email" value="@Model.NewEmail.NewEmail" content-href="#collapse2"></userdetails>
    <div id="collapse2" class="panel-collapse collapse @(ViewData.ModelState.IsFieldInvalid("NewEmail.NewEmail") ? "in" : "")">
      <div class="panel-body">
        <form method="POST" asp-controller="User" asp-action="ChangeEmail">
            <div class="form-group">
                <label>New Email</label>
                <input asp-for="NewEmail.NewEmail" value="@Model.NewEmail.NewEmail" class="form-control"/>
				<span asp-validation-for="NewEmail.NewEmail" class="text-danger"></span>
            </div>
            <input type="submit" value="Save" class="btn btn-primary"/>
        </form>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <userdetails name="Password" value="" content-href="#collapse3"></userdetails>
    <div id="collapse3" class="panel-collapse collapse @(ViewData.ModelState.IsAFieldInvalid("NewPassword.CurrentPassword", "NewPassword.NewPassword", "NewPassword.RetypeNewPassword", "NewPassword.PasswordError") ? "in" : "")">
	    <div class="panel-body">	
            <form method="POST" asp-controller="User" asp-action="ChangePassword">
				<span asp-validation-for="NewPassword.PasswordError" class="text-danger"></span>
                <div class="form-group">
                    <label>Current Password</label>
                    <input asp-for="NewPassword.CurrentPassword" type="password" class="form-control"/>
					<span asp-validation-for="NewPassword.CurrentPassword" class="text-danger"></span>
                </div>
    			<div class="form-group">
                    <label>New Password</label>
                    <input asp-for="NewPassword.NewPassword" type="password" class="form-control"/>
					<span asp-validation-for="NewPassword.NewPassword" class="text-danger"></span>
                </div>
    			<div class="form-group">
                    <label>Retype New Password</label>
                    <input asp-for="NewPassword.RetypeNewPassword" type="password" class="form-control"/>
					<span asp-validation-for="NewPassword.RetypeNewPassword" class="text-danger"></span>
                </div>					
                <input type="submit" value="Save" class="btn btn-primary"/>				
            </form>		    
	    </div>
    </div>
  </div>
</div>

<!-- TODO: Lock edit buttons when input is made-->
<!-- TODO: Cancle Buttons when input is mace-->
<!-- TODO: When error, collapse is open but edit button is still shown-->

@section Scripts{
    <script src="~/js/user-details.js"></script>
    <script src="~/js/user-validation.js"></script>
}